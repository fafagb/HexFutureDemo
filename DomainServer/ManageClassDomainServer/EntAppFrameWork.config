<?xml version="1.0" encoding="utf-8" ?>
<!--version 1.0.4-->
<EntAppFramework>
  <!--日志组件-->
  <Log></Log>

  <DataAccesses default="MSDA">
    <!--访问数据库配置-->
    <!--id：当前节点对应类型的id    
    refType：指明对应的实例对象   
    Data Source:数据库地址  
    Initial Catalog：数据库名   -->
    <DataAccess id="MSDA" refType="MSDAObj"></DataAccess>
    <Object id="MSDAObj" type="EntAppFrameWork.DataAccess.SqlDataAccess2, EntAppFrameWork.DataAccess.SqlServer">
      <constructor-arg name="connStrName" valueType="System.String" value="Data Source=192.168.2.31;Initial Catalog=ms-demo;User Id=sa; pwd=pass@word1;MultipleActiveResultSets=True;Max Pool Size=100;Application Name=UserBehavDeamonApp" />
    </Object>
    <!--Redis配置-->
    <!--serverList:Redis库访问地址    集群用，分隔，例如：
     <constructor-arg name="serverList" valueType="System.String" value="m1.domainhtecache.save.redis.group.hex.com:7001,m2.domainhtecache.save.redis.group.hex.com:7002,m3.domainhtecache.save.redis.group.hex.com:7003" />
    -->
    <DataAccess id="DomainCacheDBPool" refType="DomainCacheDBPoolObj"></DataAccess>
    <Object id="DomainCacheDBPoolObj" type="EntAppFrameWork.DataAccess.Redis.RedisDataAccess2, EntAppFrameWork.DataAccess.Redis">
      <constructor-arg name="poolId" valueType="System.String" value="domainhtecache" />
      <constructor-arg name="serverList" valueType="System.String" value="m.domainhtecache.save.redis.group.hex.com:6385" />
      <constructor-arg name="dbIndex" valueType="System.Int32" value="0" />
      <constructor-arg name="poolSize" valueType="System.Int32" value="10" />
    </Object>
    <DataAccess id="keygen" refType="keygenObj"></DataAccess>
    <Object id="keygenObj" type="EntAppFrameWork.DataAccess.Redis.RedisDataAccess2, EntAppFrameWork.DataAccess.Redis">
      <constructor-arg name="poolId" valueType="System.String" value="keygen" />
      <constructor-arg name="serverList" valueType="System.String" value="m.keygen.save.redis.group.hex.com:6379" />
      <constructor-arg name="dbIndex" valueType="System.Int32" value="0" />
      <constructor-arg name="poolSize" valueType="System.Int32" value="10" />
    </Object>
  </DataAccesses>
  
  
  <!--发布订阅组件-->
  <PublishSubscribe app="" default="KafkaProvider" log="on">
    <Provider id="EventQueueProvider" refType="kafkaP"></Provider>
    <Provider id="KafkaProvider" refType="kafkaP"></Provider>
    <Object id="kafkaP" type="EntAppFrameWork.PublishSubscribe.Kafka.PublishSubscribeClientForKafka, EntAppFrameWork.PublishSubscribe.Kafka" >
      <constructor-arg name="brokerUri" valueType="System.String" value="w1.business.kafka.group.hex.com:9092,w2.business.kafka.group.hex.com:9092,w3.business.kafka.group.hex.com:9092"/>
      <constructor-arg name="producerPoolId" valueType="System.String" value="buspool"/>
      <constructor-arg name="groupId" valueType="System.String" value="d-readebook"/>
    </Object>
  </PublishSubscribe>
  
  
  <!--serviceDiscoveryMode 服务自发现开关，默认关闭。 serviceDiscoveryMode="on"
   serviceModel 服务提供模式 remote/nlb-hash， remote代表经典的C/S结构；nlb-hash代表hash算法的负载均衡 serviceModel=”nlb-hash”
   serviceNodeType 服务节点类型 InnerProc(客户端与服务端同一个进程)|Remote(远程服务器(不带路由))|Center(路由中心服务器)|SingleNode(节点服务器)，默认值为InnerProc 例如：serviceNodeType="Remote"
   needCheckTable  "on"自动创建领域模型表，表特性TableAttribute的IsAutoCreateTable配置为true   默认为off，
   -->
  <DomainService needCheckTable="on"  serviceDiscoveryMode="on" serviceModel="nlb-hash" serviceNodeType="Remote" log="on">
    <In>
      <Dll mode = "con">
        <Domain.StudentModel.dll />
        <Domain.ClassModel.dll />
       
      </Dll>
    </In>
  </DomainService>
  <!--序列号生成组件-->
  <SerialNumber default="redisProvider">
    <SNProvider id="redisProvider" refType="redisProviderObj"> </SNProvider>
    <Object id="redisProviderObj" type="EntAppFrameWork.SerialNumber.RedisGlobalSerialNumberInt64Provider, EntAppFrameWork.SerialNumber">
      <constructor-arg name="domainName" valueType="System.String" value="HTE" />
    </Object>
  </SerialNumber>
</EntAppFramework>